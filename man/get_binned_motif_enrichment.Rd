% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motif_enrichment_monaLisa.R
\name{get_binned_motif_enrichment}
\alias{get_binned_motif_enrichment}
\title{Do Binned Motif Enrichment Analysis with \code{monaLisa} a la \code{Homer}}
\usage{
get_binned_motif_enrichment(
  seqs = NULL,
  bins = NULL,
  pwmL = NULL,
  genome = NULL,
  enrichment_test = c("binomial", "fishers_exact"),
  frac_N_allowed = 0.7,
  max_kmer_size = 3L,
  min.score = 10,
  match_method = "matchPWM.concat",
  pseudo = 0.01,
  Ncpu = 1L,
  verbose = TRUE
)
}
\arguments{
\item{seqs}{DNAStringSet object with sequences to test}

\item{bins}{factor vector of the same length and order as \code{seqs}, indicating the bin
each sequence belongs to. See the \code{\link[monaLisa]{bin}} function.}

\item{pwmL}{PWMatrixList object with PWMs of motifs.}

\item{genome}{a BSgenome object indicating the genome to which the \code{seqs} 
belong to, and which will be scanned for motif matches.}

\item{enrichment_test}{A \code{character} scalar specifying the type of
enrichment test to perform. One of \code{"binomial"} (default) or
\code{"fisher_exact"}. The enrichment test is one-sided (enriched in foreground).}

\item{frac_N_allowed}{A numeric scalar with the maximal fraction of N bases allowed 
in a sequence (defaults to 0.7). Sequences with a fraction of N bases greater than
this will be excluded from the analysis.}

\item{max_kmer_size}{the maximum kmer size to consider, when adjusting background weights
for kmer composition compared to the foreground sequences (default 1-mer, 2-mers and 3-mers).}

\item{min.score}{the \code{min.score} parameter for the \code{\link[monaLisa]{findMotifHits}} function. It
is the minimum score for counting a match (default set to 10).}

\item{match_method}{the \code{method} parameter in \code{\link[monaLisa]{findMotifHits}}. It specifies
the method used for motif searching.}

\item{Ncpu}{Number of CPUs to use (default set to 1). This can enter the \code{findMotifHits}
function when searching for motif matches.}

\item{verbose}{A logical scalar. If \code{TRUE}, report progress.}
}
\value{
A \code{SummarizedExperiment} object where the rows are the motifs and the columns are bins. The
  four assays are: \itemize{
  \item{p}{: -log10 P values}
  \item{FDR}{: -log10 false discovery rates}
  \item{enr}{: motif enrichments as Pearson residuals}
  \item{log2enr}{: motif enrichments as log2 ratios}
}
}
\description{
This function does a motif enrichment analysis on the set of sequences belonging
  to the same bin, using all the sequences in the rest of the bins as background. 
  In each enrichment analysis (per bin), \code{get_binned_motif_enrichment} uses other 
  functions within `monaLisa`, which do a motif enrichment analysis as implemented in `Homer` 
  (version 4.11). See Details for more.
}
\details{
This function implements a binned motif enrichment analysis. In each enrichment
  analysis, the sequences in a specific bin are used as foreground sequences to test for 
  motif enrichment using all other sequences (in the remaining bins) as background sequences.
  The function implements the \code{findMotifsGenome.pl} function from \code{Homer} version 4.11, 
  with \code{-size given -nomotif -mknown}, using the given list of known PWMs to test for 
  their enrichment. These \code{Homer} functions have been re-iplemented in R within \code{monaLisa} and 
  can reproduce the same output as \code{Homer} in this mode of use. Namely, weights that correct for
  GC, and k-mer composition differences between foreground and background are calculated for each
  sequence. Motif hits are scanned across the specified genome using \code{findMotifHits}, resulting
  in a sequence (row) by motif (column) matrix in ZOOPS mode, with a 1 entry if at least 1 hit is found, 
  and a 0 entry otherwise. For each motif, the weights of sequences that have a hit are summed separately
  for foreground (\code{fg_weight_sum}) and background (\code{bg_weight_sum}). The total foreground 
  (\code{fg_weight_sum_total}) and background (\code{bg_weight_sum_total}) sum is also calculated.
  
  The enrichment log p-value calculation can be done in two modes: Binomial (default) or Fisher's exact test: \itemize{
    \item{binomial}{: \code{pbinom(q = fg_weight_sum - 1, size = fg_weight_sum_total, prob = bg_weight_sum / bg_weight_sum_total, lower.tail = FALSE, log.p = TRUE)}}
    \item{fisher_exact}{: \code{fisher.test(x = cont_table, alternative = "greater")}, where cont_table is the contingency table with 
       rows specifying foreground or background, and columns indicating hit or no hit for a particular motif. The entries in this table
       are the sum of the weights of sequences meeting the row and column specifications.}
  }
  
  TODO: - Use Ncpu to also parallelize across list of DFs (enrichment per bin)
               - parallellize the other functions using Ncpu.
               - add log-enrichment info to final output.
               - for fisher's exact test: update dosumentation on one-sidedness.
               - change functions to do one-time calculations when using in binned mode?
               - filter seqs: make one-time thing.
               - should the calculated p-values be adjusted for multiple testing? (something Homer doesn't do)
               - avoid ordering of TFs in enrichment, to more easily patch things up together.
}
