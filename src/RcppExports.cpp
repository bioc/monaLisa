// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// countKmerPairs
Rcpp::RObject countKmerPairs(SEXP x, int k, int n, bool zoops);
RcppExport SEXP _monaLisa_countKmerPairs(SEXP xSEXP, SEXP kSEXP, SEXP nSEXP, SEXP zoopsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type zoops(zoopsSEXP);
    rcpp_result_gen = Rcpp::wrap(countKmerPairs(x, k, n, zoops));
    return rcpp_result_gen;
END_RCPP
}
// countKmerPairsSelected
Rcpp::RObject countKmerPairsSelected(SEXP x, SEXP kmers, int n, bool zoops);
RcppExport SEXP _monaLisa_countKmerPairsSelected(SEXP xSEXP, SEXP kmersSEXP, SEXP nSEXP, SEXP zoopsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type kmers(kmersSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type zoops(zoopsSEXP);
    rcpp_result_gen = Rcpp::wrap(countKmerPairsSelected(x, kmers, n, zoops));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_monaLisa_countKmerPairs", (DL_FUNC) &_monaLisa_countKmerPairs, 4},
    {"_monaLisa_countKmerPairsSelected", (DL_FUNC) &_monaLisa_countKmerPairsSelected, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_monaLisa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
